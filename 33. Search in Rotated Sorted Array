/**
  * https://leetcode.com/problems/search-in-rotated-sorted-array/
  */

public class Solution {
    public int search(int[] nums, int target) {
        if(nums == null) return -1;
        int n = nums.length;
        if(n == 1) return nums[0]==target? 0:-1;
        int start = 0, end = n-1;
        while(start < end){
            int mid = start + (end-start)/2;
            if(nums[mid]==target){
                return mid;
            }else if(nums[mid] > nums[end]){   //前半列
                if(target > nums[mid] || target < nums[mid] && target < nums[end]){
                    start = mid + 1;
                }else if(nums[end] == target){
                    return end;
                }else{
                    end = mid;
                }
            }else{                             //后半列
                if(target < nums[mid] || target > nums[mid] && target > nums[end]){
                    end = mid;
                }else if(nums[end] == target){
                    return end;
                }else{
                    start = mid + 1;
                }
            }
        }
        return -1;
    }
}
