/**
  * https://leetcode.com/problems/unique-paths-ii/
  */

class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m = obstacleGrid.size();
        if(obstacleGrid.size() == 0) return 0;
        int n = obstacleGrid[0].size();
        int ret[m][n] = {0};
        int flag = 1;
        for(int i = 0; i < m;++i){
            if(obstacleGrid[i][0] == 1) flag = 0;
            ret[i][0] = flag;
        }
        flag = 1;
        for(int i = 0; i < n; ++i){
            if(obstacleGrid[0][i] == 1) flag = 0;
            ret[0][i] = flag;
        }
        for(int i = 1; i < m; ++i){
            for(int j = 1; j < n; ++j){
                if(obstacleGrid[i][j] == 1) ret[i][j] = 0;
                else ret[i][j] = ret[i-1][j] + ret[i][j-1];
            }
        }
        return ret[m-1][n-1];
    }
};
