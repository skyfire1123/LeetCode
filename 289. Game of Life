/**
  * https://leetcode.com/problems/game-of-life/
  */

public class Solution {
    //dead->dead:0  dead->live:10  live->dead:11  live->live:1
    //                  10 & 1 = 0   11 & 1 = 1
    public void gameOfLife(int[][] board) {
        int m = board.length, n = board[0].length;
        for(int i = 0; i < m; ++i){
            for(int j = 0; j < n; ++j){
                int lives = liveOfNeighbors(board,i,j);
                if(board[i][j] == 1){ //live cell
                    if(lives < 2 || lives > 3) board[i][j] = 3; //live to dead;
                }else{ //dead cell
                    if(lives == 3) board[i][j] = 2; //dead to live;
                }
            }
        }
        for(int i = 0; i < m; ++i){
            for(int j = 0; j < n; ++j){
                if(board[i][j] == 2) board[i][j] = 1;
                else if(board[i][j] == 3) board[i][j] = 0;
            }
        }
    }
    public int liveOfNeighbors(int[][] board, int x, int y){
        int m = board.length, n = board[0].length;
        int count = 0;
        for(int i = x-1; i <= x+1; ++i){
            for(int j = y-1; j <= y+1; ++j){
                if(i < 0 || j < 0 || i > m-1 || j > n-1|| i==x && j==y){
                    continue;
                }
                if((board[i][j] & 1) == 1){
                    count++;
                }
            }
        }
        return count;
    }
}
