/**
  * https://leetcode.com/problems/odd-even-linked-list/
  */

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == nullptr||head->next == nullptr) return head;
        ListNode *p1 = head,*p2 = head->next,*evenHead = p2; 
        /*   1   3   5   7
        /     \ / \ / \ / ...
        /      2   4   6
        / 
        /(p1)1-> 3   5   7
        /         \ / ...
        /  (p1)2-> 4   6
        */
        while(p2 && p2->next){
            p1->next = p2->next;
            p1 = p1->next;
            p2->next = p1->next;
            p2 = p2->next;
        }
        p1->next = evenHead;
        return head;
    }
};
