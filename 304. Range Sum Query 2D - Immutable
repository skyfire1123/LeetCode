/**
  * https://leetcode.com/problems/range-sum-query-2d-immutable/
  */
  
public class NumMatrix {
    private int[][] sumCorner;
    private int[][] matrix;
    public NumMatrix(int[][] matrix) {
        this.matrix = matrix;
        int m = matrix.length;
        if(m!=0){
            int n = matrix[0].length;
            sumCorner = new int[m][n];
            for(int i = 0; i < m; ++i){
                for(int j = 0; j < n; ++j){
                    if(i==0&&j==0) sumCorner[i][j] = matrix[i][j];
                    else if(i==0) sumCorner[i][j] = sumCorner[i][j-1]+matrix[i][j];
                    else if(j==0) sumCorner[i][j] = sumCorner[i-1][j]+matrix[i][j];
                    else sumCorner[i][j] = sumCorner[i-1][j]+sumCorner[i][j-1]-sumCorner[i-1][j-1]+matrix[i][j];
                }
            }
        }
    }

    public int sumRegion(int row1, int col1, int row2, int col2) {
        if(row1 == 0 && col1 == 0) return sumCorner[row2][col2];
        if(row1 == 0) return sumCorner[row2][col2]-sumCorner[row2][col1-1];
        if(col1 == 0) return sumCorner[row2][col2]-sumCorner[row1-1][col2];
        return sumCorner[row2][col2] - sumCorner[row2][col1-1] - sumCorner[row1-1][col2] + sumCorner[row1-1][col1-1];
    }
}
