/**
  * https://leetcode.com/problems/multiply-strings/
  */
class Solution {
public:
    string multiply(string num1, string num2) {
        string res = "";
        int n1 = num1.size(), n2 = num2.size();
        if(n1 == 0 && n2 == 0) return res;
        vector<string> keeper;
        for(int i = 1; i <= n1; ++i){
            string str = multiStr(num2,num1[n1-i]);
            keeper.push_back(str);
        }
        for(int i = 0; i < keeper.size(); ++i){
            for(int j = 0; j < i; ++j){
                if(keeper[i]!="0") keeper[i] += '0';
            }
            res = addStr(res,keeper[i]);
        }
        return res;
    }
    string multiStr(string s, char c){
        string res = "";
        if(c == '0') return res+= '0';
        int n = s.size();
        int t = c - '0';
        int carry = 0;
        stack<char> ist;
        for(int i = 1; i <= n; ++i){
            int a = s[n-i]-'0';
            int k = (a*t+carry)%10;
            ist.push('0'+ k);
            carry = (a*t+carry)/10;
        }
        if(carry) ist.push('0'+carry);
        while(!ist.empty()){
            res += ist.top();
            ist.pop();
        }
        return res;
    }
    string addStr(string num1, string num2){
        if(num1 == "" || num1 == "0") return num2;
        if(num2 == "" || num2 == "0") return num1;
        string res = "";
        int n1 = num1.size(), n2 = num2.size();
        int carry = 0;
        stack<char> ist;
        for(int i = 1; i <= n1 && i <= n2; ++i){
            int k = (num1[n1-i] -'0') + (num2[n2-i] - '0') + carry;
            carry = k > 9? 1 : 0;
            ist.push('0'+ k%10);
        }
        if(n1 < n2){
            res += carry == 1? addStr("1",num2.substr(0,n2-n1)):num2.substr(0,n2-n1);
        }else if(n1 > n2){
            res += carry == 1? addStr("1",num1.substr(0,n1-n2)):num1.substr(0,n2-n1);
        }else{
            if(carry == 1) res += '1'; 
        }
        while(!ist.empty()){
            res += ist.top();
            ist.pop();
        }
        return res;
    }
};
