/**
  * https://leetcode.com/problems/flatten-binary-tree-to-linked-list/
  */

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void flatten(TreeNode root) {
        helper(root);
    }
    TreeNode helper(TreeNode root){
        if(root == null || root.left == null && root.right == null) return root;
        if(root.left == null){
            root.right = helper(root.right);
            return root;
        }
        if(root.right == null){
            root.right = helper(root.left);
            root.left = null;
            return root;
        }
        TreeNode left = helper(root.left);
        TreeNode right = helper(root.right);
        TreeNode node = left;
        for(; node.right!=null; node=node.right);
        node.right = right;
        root.right = left;
        root.left = null;
        return root;
    }
}
