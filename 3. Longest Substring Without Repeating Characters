/**
  * https://leetcode.com/problems/longest-substring-without-repeating-characters/
  */
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int n = s.size();
        if(n < 2) return n;
        int beg = 0, end = 1, max = 1;
        unordered_map<char,int> map;
        map[s[beg]] = beg;
        while(end < n){
            auto iter = map.find(s[end]);
            if(iter!=map.end() && iter->second >= beg){
                if(end - beg > max){
                    max = end - beg;
                }
                beg = iter->second + 1;
                map[s[end]] = end++;
            }else{
                if(end - beg + 1> max){
                    max = end - beg + 1;
                }
                map[s[end]] = end++;
            }
        }
        return max;
    }
};
