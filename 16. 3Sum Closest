/**
  * https://leetcode.com/problems/3sum-closest/
  */

class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        if(nums.size() < 3) return 0;
        sort(nums.begin(),nums.end());
        int min = 0,diff = INT_MAX;
        for(int i = 0; i < nums.size()-2; ++i){
            int j = i + 1;
            int k = nums.size() - 1;
            while(j < k){
                int sum = nums[i] + nums[j] + nums[k];
                if(abs(sum-target) < diff){
                    diff = abs(sum-target);
                    min = sum;
                }
                if(sum == target) return target;
                if(sum > target) while(nums[k] == nums[--k] && j < k);
                if(sum < target) while(nums[j] == nums[++j] && j < k);
            }
        }
        return min;
    }
};
