/**
  * https://leetcode.com/problems/word-search/
  */
public class Solution {
    public boolean exist(char[][] board, String word) {
        int m = board.length, n = board[0].length;
        for(int i = 0; i < m; ++i){
            for(int j = 0; j < n; ++j){
                if(board[i][j] == word.charAt(0) && find(i,j,0,board,word)){
                    return true;
                }
            }
        }
        return false;
    }
    
    boolean find(int row,int col,int index,char[][] board, String word){
        if(index == word.length()) return true;
        if(row < 0 || col < 0 || row == board.length || col == board[0].length) return false;
        if(board[row][col]!=word.charAt(index)) return false;
        board[row][col] ^= 256;
        boolean existed = find(row+1,col,index+1,board,word)||find(row-1,col,index+1,board,word)
        ||find(row,col+1,index+1,board,word)||find(row,col-1,index+1,board,word);
        board[row][col] ^= 256;
        return existed;
    }
}
