/**
  * https://leetcode.com/problems/swap-nodes-in-pairs/
  */





/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        if(head == nullptr || head->next == nullptr){
            return head;
        }
        //third储存第三个节点
        ListNode* third = head->next->next;
        //second储存第二个节点
        ListNode* second = head->next;
        //head指向反转后的第三个节点
        head->next = swapPairs(third);
        //第二个节点指向第一个节点
        second->next = head;
        //返回第二个节点
        return second;
    }
};
