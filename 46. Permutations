/**
  * https://leetcode.com/problems/permutations/
  */

class Solution {
public:
    vector<int> removeIndex(vector<int>& nums, int index){
        vector<int> ret;
        for(int i = 0; i < nums.size(); ++i){
            if(i != index){
                ret.push_back(nums[i]);
            }
        }
        return ret;
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int> > ret;
        if(nums.size() < 2){
            ret.push_back(nums);
            return ret;
        }
        for(int i = 0; i < nums.size(); ++i){
            vector<int> r = removeIndex(nums,i);
            vector<vector<int> > pre = permute(r);
            for(vector<int> ivec:pre){
                vector<int> temp;
                temp.push_back(nums[i]);
                for(int element: ivec){
                    temp.push_back(element);
                }
                ret.push_back(temp);
            }
        }
        return ret;
    }
};
