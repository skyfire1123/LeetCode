/**
  * https://leetcode.com/problems/letter-combinations-of-a-phone-number/
  */

class Solution {
public:
    const vector<string> ntol = {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
    vector<string> letterCombinations(string digits) {
        vector<string> res;
        int n = digits.size();
        if(n == 0) return res;
        if(n == 1){
            string first = ntol[digits[0]-'0'];
            for(int i = 0; i < first.size(); ++i){
                string s = "";
                s += first[i];
                res.push_back(s);
            }
            return res;
        }
        string str = "";
        for(int i = 0; i < n-1; ++i){
            str += digits[i];
        }
        vector<string> pre = letterCombinations(str);
        for(int i = 0; i < pre.size(); ++i){
            string s = ntol[digits[n-1]-'0'];
            for(int j = 0; j < s.size(); ++j){
                res.push_back(pre[i]+s[j]);
            }
        }
        return res;
    }
};
