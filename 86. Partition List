/**
  * https://leetcode.com/problems/partition-list/
  */
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        if(head == NULL) return head;
        ListNode* small = new ListNode(0);
        ListNode* big = new ListNode(0);
        ListNode* p1 = small;
        ListNode* p2 = big;
        for(ListNode* node = head; node!=NULL; node = node->next){
            if((node->val) < x){
                p1 = p1->next = node;
            }else{
                p2 = p2->next = node;
            }
        }
        p1->next = big->next;
        p2->next = NULL;
        return small->next;
    }
};
